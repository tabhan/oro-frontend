workflows:
  tab_checkout:
    transition_definitions:
      start_from_shoppinglist_definition:
        actions:
          - '@call_service_method':
              service: tab_frontend.checkout.action
              method: beforeStartCheckout
              method_parameters: [ $.result.shoppingList, $.data.shopping_list_items_info ]
          - '@run_action_group':
              action_group: start_shoppinglist_checkout
              parameters_mapping:
                shoppingList: $.result.shoppingList
                showErrors: true
              results:
                data.checkout: $.checkout
                result.redirectUrl: $.redirectUrl
          - '@call_service_method':
              service: tab_frontend.checkout.action
              method: afterStartCheckout
              method_parameters: [ $.result.shoppingList ]
          - '@flush_entity': $.result.shoppingList
          - '@delete_checkout_state':
              conditions:
                '@not_blank': $state_token
              parameters:
                entity: $checkout
                token: $state_token
          - '@transit_workflow':
              conditions:
                '@or':
                  - '@empty': $.result.shoppingList.customerUser
                  - '@equal': [ $.result.shoppingList.customerUser.isGuest, true ]
              parameters:
                entity: $checkout
                transition: 'back_to_enter_credentials'
                workflow: $.definition.name
